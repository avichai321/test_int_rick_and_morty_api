name: Deploy to k8s github

on:
  push:
    branches:
      - master

jobs:
  deploy-test:
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up k3s
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker
          sudo chmod 644 /etc/rancher/k3s/k3s.yaml
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install rick-and-morty-rest-app ./rick-and-morty-rest-api-0.1.0.tgz \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/rick_and_morty_avicii \
            --set image.tag=latest
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml

      - name: Wait for deployment
        run: | 
          sudo systemctl status k3s 
          sudo systemctl start k3s


      - name: Test Fetch Characters Endpoint
        run: |
          endpoint=$(kubectl get svc rick-and-morty-rest-service -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}')/fetch_char
          response=$(curl -s -o /dev/null -w "%{http_code}" $endpoint)
          if [ $response -eq 200 ]; then
            echo "Fetch Characters endpoint is reachable"
          else
            echo "Fetch Characters endpoint returned status $response"
            exit 1
          fi

      - name: Test Health Check Endpoint
        run: |
          endpoint=$(kubectl get svc rick-and-morty-rest-service -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}')/healthcheck
          response=$(curl -s -o /dev/null -w "%{http_code}" $endpoint)
          if [ $response -eq 200 ]; then
            echo "Health Check endpoint is reachable"
          else
            echo "Health Check endpoint returned status $response"
            exit 1
          fi

      - name: Stop k3s
        run: sudo k3s-uninstall.sh
